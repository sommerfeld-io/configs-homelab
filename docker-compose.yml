---
volumes:

  project-root-volume:
    driver: local
    driver_opts:
      type: none
      device: .
      o: bind


services:

  cleanup:
    container_name: ${COMPOSE_PROJECT_NAME}-cleanup
    image: alpine:latest
    volumes: &volumes
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - project-root-volume:/workspaces/configs-homelab
    working_dir: &default-workdir /workspaces/configs-homelab
    command:
      - /bin/ash
      - -c
      - |
        rm -rf target
        rm -rf target/docs/site
    tty: &tty true

  generate-docs:
    container_name: ${COMPOSE_PROJECT_NAME}-generate-docs
    image: sommerfeldio/shdoc:0.5.0
    volumes: *volumes
    working_dir: *default-workdir
    command:
      - /bin/bash
      - -c
      - |
        rm -rf docs/generated/scripts
        mkdir -p docs/generated/scripts

        shdoc < components/ansible-cli.sh > docs/generated/scripts/ansible-cli-sh.md
        shdoc < components/docker-stacks-cli.sh > docs/generated/scripts/docker-stacks-cli-sh.md
        shdoc < components/minikube-cli.sh > docs/generated/scripts/minikube-cli-sh.md
        shdoc < components/bootstrap/install-basics.sh > docs/generated/scripts/bootstrap-install-basics-sh.md
        shdoc < components/bootstrap/ssh-server.sh > docs/generated/scripts/bootstrap-ssh-server-sh.md

        rm -rf docs/generated/stacks
        mkdir -p docs/generated/stacks

        shdoc < components/docker-stacks/ops/docker-compose.yml > docs/generated/stacks/ops-docker-compose-yml.md
        shdoc < components/docker-stacks/pihole/docker-compose.yml > docs/generated/stacks/pihole-docker-compose-yml.md
        shdoc < components/docker-stacks/portainer/docker-compose.yml > docs/generated/stacks/portainer-docker-compose-yml.md

        chown -R 1000:1000 docs
    tty: *tty

  lint-yaml:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-yaml
    image: cytopia/yamllint:latest
    volumes: *volumes
    working_dir: *default-workdir
    command: .
    tty: *tty

  lint-workflows:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-workflows
    image: rhysd/actionlint:latest
    volumes: *volumes
    working_dir: *default-workdir
    command: -color
    tty: *tty

  lint-filenames:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-filenames
    image: lslintorg/ls-lint:1.11.2
    volumes: *volumes
    working_dir: *default-workdir
    tty: *tty

  lint-folders:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-folders
    image: sommerfeldio/folderslint:latest
    volumes: *volumes
    working_dir: *default-workdir
    command: .
    tty: *tty

  lint-ansible:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-ansible
    image: cytopia/ansible-lint:latest
    volumes: *volumes
    working_dir: *default-workdir
    command: components/ansible/playbooks -c .ansible-lint.yml
    tty: true

  lint-helm:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-helm
    image: alpine/helm:3.16.1
    volumes: *volumes
    working_dir: *default-workdir
    command: lint components/minikube/admin-charts/portainer --with-subcharts
    tty: true

  docs-build:
    container_name: ${COMPOSE_PROJECT_NAME}-docs-build
    image: &docs-image sommerfeldio/mkdocs:latest
    volumes: *volumes
    working_dir: *default-workdir
    command: build
    tty: *tty
    depends_on:
      cleanup:
        condition: service_completed_successfully

  docs-dev-server:
    container_name: ${COMPOSE_PROJECT_NAME}-docs-dev-server
    image: *docs-image
    volumes: *volumes
    working_dir: *default-workdir
    ports:
      - 3080:8000
    tty: *tty
