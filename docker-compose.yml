---
volumes:

  project-root-volume:
    driver: local
    driver_opts:
      type: none
      device: .
      o: bind


services:

  cleanup:
    container_name: ${COMPOSE_PROJECT_NAME}-cleanup
    image: alpine:latest
    volumes: &volumes
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - project-root-volume:/workspaces/configs-homelab
    working_dir: &default-workdir /workspaces/configs-homelab
    command:
      - /bin/ash
      - -c
      - |
        rm -rf target
        rm -rf target/docs/site
    tty: &tty true

  # TODO turn into image in container-images
  generate-docs:
    container_name: ${COMPOSE_PROJECT_NAME}-generate-docs
    image: ubuntu:24.04
    volumes: *volumes
    working_dir: *default-workdir
    command:
      - /bin/bash
      - -c
      - |
        apt-get update
        apt-get install -y --no-install-recommends gawk
        apt-get install -y --no-install-recommends git
        apt-get install -y --no-install-recommends make
        apt-get install -y --no-install-recommends ca-certificates
        apt-get clean
        rm -rf /var/lib/apt/lists/*

        (
          cd /tmp || exit
          git clone --recursive https://github.com/reconquest/shdoc
          cd shdoc || exit
          make install
        )

        rm -rf docs/scripts/generated
        echo docs/scripts/generated
        mkdir -p docs/scripts/generated
        shdoc < components/ansible-cli.sh > docs/scripts/generated/ansible-cli-sh.md
        shdoc < components/docker-stacks-cli.sh > docs/scripts/generated/docker-stacks-cli-sh.md
        shdoc < components/minikube-cli.sh > docs/scripts/generated/minikube-cli-sh.md

        chown -R 1000:1000 docs
    tty: *tty

  lint-yaml:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-yaml
    image: cytopia/yamllint:latest
    volumes: *volumes
    working_dir: *default-workdir
    command: .
    tty: *tty

  lint-workflows:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-workflows
    image: rhysd/actionlint:latest
    volumes: *volumes
    working_dir: *default-workdir
    command: -color
    tty: *tty

  lint-filenames:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-filenames
    image: lslintorg/ls-lint:1.11.2
    volumes: *volumes
    working_dir: *default-workdir
    tty: *tty

  lint-folders:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-folders
    image: sommerfeldio/folderslint:latest
    volumes: *volumes
    working_dir: *default-workdir
    command: .
    tty: *tty

  lint-ansible:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-ansible
    image: cytopia/ansible-lint:latest
    volumes: *volumes
    working_dir: *default-workdir
    command: components/ansible/playbooks -c .ansible-lint.yml
    tty: true

  docs-build:
    container_name: ${COMPOSE_PROJECT_NAME}-docs-build
    image: &docs-image sommerfeldio/mkdocs:latest
    volumes: *volumes
    working_dir: *default-workdir
    command: build
    tty: *tty
    depends_on:
      cleanup:
        condition: service_completed_successfully

  docs-dev-server:
    container_name: ${COMPOSE_PROJECT_NAME}-docs-dev-server
    image: *docs-image
    volumes: *volumes
    working_dir: *default-workdir
    ports:
      - 3080:8000
    tty: *tty
