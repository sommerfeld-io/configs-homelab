---
version: '3.42.1'

vars:
  INSPEC_DIR: tests/inspec

tasks:

  cleanup:
    desc: Cleanup the development environment for this project
    cmds:
      - docker compose up cleanup
      - docker compose down --remove-orphans
      - rm -rf .cache
      - rm -rf node_modules
      - rm -rf target

  # ===============================================================================================

  lint:
    desc: Run all project linters (except Dockerfile linters)
    cmds:
      - chmod u+rw,g+rw,o+r ./*.md
      - for: ['yaml', 'workflows', 'filenames', 'folders', 'markdown-links', 'ansible', 'helm', 'k8s-manifests']
        cmd: docker compose up lint-{{ .ITEM }} --exit-code-from lint-{{ .ITEM }}

  # ===============================================================================================

  docs:run:
    desc: Run the documentation server
    cmds:
      - docker compose up docs-dev-server

  # ===============================================================================================

  host:ansible:cleanup:
    vars:
      PLAYBOOK: cleanup.yml
    desc: &ansible-desc HOST ONLY | Run Ansible playbook | {{ .PLAYBOOK }}
    dir: &ansible-dir components/ansible
    cmds: &ansible-cmd
      - ansible-playbook "playbooks/{{ .PLAYBOOK }}" --inventory hosts.yml --ask-become-pass

  host:ansible:raspi:
    vars:
      PLAYBOOK: raspi.yml
    desc: *ansible-desc
    dir: *ansible-dir
    cmds: *ansible-cmd

  host:ansible:ubuntu:desktop:
    vars:
      PLAYBOOK: ubuntu-desktop.yml
    desc: *ansible-desc
    dir: *ansible-dir
    cmds: *ansible-cmd

  host:ansible:ubuntu:desktop-steam:
    vars:
      PLAYBOOK: ubuntu-desktop-steam.yml
    desc: *ansible-desc
    dir: *ansible-dir
    cmds: *ansible-cmd

  # ===============================================================================================

  inspec:check:all:
    desc: &inspec-check-desc Vendor and check InSpec profile validity
    cmds:
      - for: ['ansible-baseline', 'talos-baseline']
        task: inspec:check:{{ .ITEM }}

  inspec:check:*:
    desc: *inspec-check-desc
    vars:
      PROFILE: '{{ index .MATCH 0 }}'
    cmds:
      - rm -f "{{ .INSPEC_DIR }}/{{ .PROFILE }}/inspec.lock"
      - docker compose run --rm inspec vendor "{{ .INSPEC_DIR }}/{{ .PROFILE }}" --overwrite --chef-license=accept
      - docker compose run --rm inspec check "{{ .INSPEC_DIR }}/{{ .PROFILE }}" --chef-license=accept

  host:test:inspec:ansible-baseline:all:
    desc: HOST ONLY | Run InSpec against all nodes
    deps:
      - task: inspec:check:all
    cmds:
      - for: ['caprica.fritz.box', 'kobol.fritz.box']
        task: host:test:inspec:ansible-baseline:{{ .ITEM }}

  host:test:inspec:ansible-baseline:*:
    desc: HOST ONLY | Run InSpec against single node (* = FQDN)
    vars:
      HOST: '{{ index .MATCH 0 }}'
      USER: sebastian
      PROFILE: ansible-baseline
    cmds:
      - docker compose run --rm --env SSH_AUTH_SOCK=/ssh-auth.sock -v "$SSH_AUTH_SOCK:/ssh-auth.sock" inspec exec "{{ .INSPEC_DIR }}/{{ .PROFILE }}" --target "ssh://{{ .USER }}@{{ .HOST }}" --no-distinct-exit --chef-license=accept

  host:test:inspec:talos-baseline:
    desc: HOST ONLY | Run InSpec against Talos cluster
    vars:
      PROFILE: talos-baseline
    cmds:
      - docker compose run --rm inspec exec "{{ .INSPEC_DIR }}/{{ .PROFILE }}" --no-distinct-exit --chef-license=accept

  # ===============================================================================================

  host:virtual-talos-admin:start:
    desc: HOST ONLY | Startup the Talos Administration Vagrantbox'
    dir: &talos-vm-dir components/talos-cluster/virtual-talos-admin
    cmds:
      - vagrant validate
      - vagrant up
      - vagrant ssh

  host:virtual-talos-admin:stop:
    desc: HOST ONLY | Shutdown the Talos Administration Vagrantbox
    dir: *talos-vm-dir
    cmds:
      - vagrant halt

  host:virtual-talos-admin:ssh:
    desc: HOST ONLY | SSH into the Talos Administration Vagrantbox
    dir: *talos-vm-dir
    cmds:
      - vagrant ssh

  host:virtual-talos-admin:remove:
    desc: HOST ONLY | Remove the Talos Administration Vagrantbox
    dir: *talos-vm-dir
    cmds:
      - vagrant halt
      - vagrant destroy --force
