---
version: '3.42.1'

tasks:

  repository:new:sommerfeld-io/*:
    vars:
      ORG: sommerfeld-io
      TEMPLATE_REPO_NAME: template-repository
      NEW_REPO_NAME: '{{index .MATCH 0}}'
      REPO_DIR: ~/work/repos/{{.ORG}}
    desc: 'Create a new repository on GitHub (* = repository name without organization)'
    summary: |
      Create a new GitHub repository under {{.ORG}}, based on the template {{.ORG}}/{{.TEMPLATE_REPO_NAME}}.
      The repository is also cloned locally, configured remotely on GitHub, and opened in VS Code.
      Repositories are cloned into {{.REPO_DIR}}.
    dir: '{{.REPO_DIR}}'
    cmds:
      - 'gh auth login'
      - 'gh repo create {{.ORG}}/{{.NEW_REPO_NAME}} --template {{.ORG}}/{{.TEMPLATE_REPO_NAME}} --public'
      - 'sleep 3'
      - 'git clone git@github.com:{{.ORG}}/{{.NEW_REPO_NAME}}.git'
      - 'gh repo edit {{.ORG}}/{{.NEW_REPO_NAME}} --enable-discussions --enable-issues --enable-projects --enable-wiki=false'
      - 'code {{.NEW_REPO_NAME}}'

  # ===============================================================================================

  docker:stack:ops:start:
    vars: &docker-stack-ops
      STACK: ops
    desc: &docker-stack-desc 'Docker stack = {{.STACK}} (start|stop|logs)'
    dir: &docker-stack-dir ~/.docker-stacks/{{.STACK}}
    cmds: &docker-stack-cmd-start
      - docker compose up -d

  docker:stack:ops:stop:
    vars: *docker-stack-ops
    desc: *docker-stack-desc
    dir: *docker-stack-dir
    cmds: &docker-stack-cmd-stop
      - docker compose down --volumes --remove-orphans

  docker:stack:ops:logs:
    vars: *docker-stack-ops
    desc: *docker-stack-desc
    dir: *docker-stack-dir
    cmds: &docker-stack-cmd-logs
      - docker compose logs -f

  docker:stack:portainer:start:
    vars: &docker-stack-portainer
      STACK: portainer
    desc: *docker-stack-desc
    dir: *docker-stack-dir
    cmds: *docker-stack-cmd-start

  docker:stack:portainer:stop:
    vars: *docker-stack-portainer
    desc: *docker-stack-desc
    dir: *docker-stack-dir
    cmds: *docker-stack-cmd-stop

  docker:stack:portainer:logs:
    vars: *docker-stack-portainer
    desc: *docker-stack-desc
    dir: *docker-stack-dir
    cmds: *docker-stack-cmd-logs

  # ===============================================================================================

  minikube:start:
    desc: &minikube-desc 'Minikube (start|stop|dashboard|pods|services|status|destroy)'
    cmds:
      - minikube start
      - sleep 5s
      - minikube addons enable metrics-server
      - minikube addons enable ingress

  minikube:stop:
    desc: *minikube-desc
    cmds:
      - minikube stop

  minikube:dashboard:
    desc: *minikube-desc
    cmds:
      - minikube dashboard

  minikube:pods:
    desc: *minikube-desc
    cmds:
      - minikube kubectl -- get po -A

  minikube:services:
    desc: *minikube-desc
    cmds:
      - minikube service list

  minikube:status:
    desc: *minikube-desc
    cmds:
      - minikube version
      - helm version
      - minikube status

  minikube:destroy:
    desc: *minikube-desc
    cmds:
      - minikube delete

  # ===============================================================================================

  screen:caprica:
    vars: &screen-vars
      MONITOR_LEFT: "5" # Curved (landscape) /dev/i2c-5
      MONITOR_RIGHT: "4" # UHD (portrait) /dev/i2c-4
      CHANGE_INPUT_SOURCE: "0x60"
      SOURCE_HDMI_1: "0x11"
      SOURCE_HDMI_2: "0x12"
      SOURCE_DP: "0x0f"
    desc: &screen-desc 'Switch inputs sources for screens'
    cmds:
      - ddcutil -b {{.MONITOR_LEFT}} setvcp {{.CHANGE_INPUT_SOURCE}} {{.SOURCE_DP}}
      - ddcutil -b {{.MONITOR_RIGHT}} setvcp {{.CHANGE_INPUT_SOURCE}} {{.SOURCE_HDMI_1}}

  screen:office:
    vars: *screen-vars
    desc: *screen-desc
    cmds:
      - ddcutil -b {{.MONITOR_LEFT}} setvcp {{.CHANGE_INPUT_SOURCE}} {{.SOURCE_HDMI_2}}
      - ddcutil -b {{.MONITOR_RIGHT}} setvcp {{.CHANGE_INPUT_SOURCE}} {{.SOURCE_HDMI_2}}

  # ===============================================================================================

  ssh:connect:kobol:
    vars:
      USER: sebastian
      HOST: kobol.fritz.box
    desc: &ssh-connect-desc 'SSH connect {{.USER}}@{{.HOST}}'
    cmds: &ssh-connect-cmd
      - ssh {{.USER}}@{{.HOST}}

  ssh:connect:caprica:
    vars:
      USER: sebastian
      HOST: caprica.fritz.box
    desc: *ssh-connect-desc
    cmds: *ssh-connect-cmd

  # ===============================================================================================

  system:info:
    desc: 'Show system information'
    cmds:
      - hostnamectl
      - 'echo -e " ${B}Ubuntu Codename:${D} $(lsb_release -c | cut -f2)"'
    silent: true
