---
- name: Telemetry Metrics  ----  Docker  ----  Check if docker-compose.yml file exists
  stat:
    path: "{{ stack_metrics }}/docker-compose.yml"
  register: compose_file

- name: Telemetry Metrics  ----  Docker  ----  Tear down existing services
  community.docker.docker_compose_v2:
    project_src: "{{ stack_metrics }}"
    state: absent
    remove_orphans: true
    remove_volumes: true
  when: compose_file.stat.exists

- name: Telemetry Metrics  ----  Clone repos
  ansible.builtin.git:
    repo: "{{ github }}:{{ item.org }}/{{ item.repo }}.git"
    dest: "{{ item.dest }}/{{ item.repo }}"
    clone: true
    update: true
    key_file: "/home/{{ ansible_user }}/.ssh/id_rsa"
    accept_hostkey: true
  with_items:
    - { dest: "{{ dot_repos_dir }}", org: "sommerfeld-io", repo: "telemetry" }

- name: Telemetry Metrics  ----  Docker  ----  Create and start services
  community.docker.docker_compose_v2:
    project_src: "{{ stack_metrics }}"
    # TODO ... https://github.com/sommerfeld-io/telemetry/issues/7
    # wait: true
    # wait_timeout: 30 # seconds
  register: output

- name: Telemetry Metrics  ----  Docker  ----  Verify that services are running
  ansible.builtin.assert:
    that:
      - node_exporter_container.State == 'running'
      - cadvisor_container.State == 'running'
  vars:
    node_exporter_container: >-
      {{ output.containers | selectattr("Service", "equalto", "node_exporter") | first }}
    cadvisor_container: >-
      {{ output.containers | selectattr("Service", "equalto", "cadvisor") | first }}
